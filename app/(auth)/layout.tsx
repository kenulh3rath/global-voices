import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { Toaster } from "@/components/ui/sonner"
import ApolloWrapper from "@/lib/apolloWrapper"
import {getServerSession} from "next-auth";
import {authOptions} from "@/app/api/auth/[...nextauth]/route";
import {permanentRedirect} from "next/navigation";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {

    // Check if the user is authenticated
    const session: { user: { role: string, id: string } } | null = await getServerSession(authOptions)

    // Redirect to root if authenticated
    if (session) {
        permanentRedirect('/')
    }

    return (
        <html lang="en">
        <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
        <ApolloWrapper>
            {children}
        </ApolloWrapper>
        <Toaster />
        </body>
        </html>
    );
}
